

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Apr 14 20:30:35 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.44
    28                           ; Generated 14/09/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  0091                     	;# 
   106  0092                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  018C                     	;# 
   120  018D                     	;# 
   121  000B                     _INTCON	set	11
   122  0008                     _PORTD	set	8
   123  0059                     _INTF	set	89
   124  005C                     _INTE	set	92
   125  0081                     _OPTION_REG	set	129
   126  0086                     _TRISB	set	134
   127  0088                     _TRISD	set	136
   128                           
   129                           	psect	strings
   130  03E0                     __pstrings:	
   131  03E0                     stringtab:	
   132  03E0                     __stringtab:	
   133  03E0                     stringcode:	
   134                           ;	String table - string pointers are 1 byte each
   135                           
   136  03E0                     stringdir:	
   137  03E0  3003               	movlw	high stringdir
   138  03E1  008A               	movwf	10
   139  03E2  0804               	movf	4,w
   140  03E3  0A84               	incf	4,f
   141  03E4  0782               	addwf	2,f
   142  03E5                     __stringbase:	
   143  03E5  3400               	retlw	0
   144  03E6                     __end_of__stringtab:	
   145  03E6                     STR_4:	
   146  03E6  346B               	retlw	107	;'k'
   147  03E7  3472               	retlw	114	;'r'
   148  03E8  3469               	retlw	105	;'i'
   149  03E9  347A               	retlw	122	;'z'
   150  03EA  3420               	retlw	32	;' '
   151  03EB  3451               	retlw	81	;'Q'
   152  03EC  3475               	retlw	117	;'u'
   153  03ED  3461               	retlw	97	;'a'
   154  03EE  3464               	retlw	100	;'d'
   155  03EF  3420               	retlw	32	;' '
   156  03F0  3454               	retlw	84	;'T'
   157  03F1  3478               	retlw	120	;'x'
   158  03F2  3400               	retlw	0
   159  03F3                     STR_3:	
   160  03F3  3444               	retlw	68	;'D'
   161  03F4  343D               	retlw	61	;'='
   162  03F5  3400               	retlw	0
   163  03F6                     STR_2:	
   164  03F6  3449               	retlw	73	;'I'
   165  03F7  343D               	retlw	61	;'='
   166  03F8  3400               	retlw	0
   167  03F9                     STR_1:	
   168  03F9  3450               	retlw	80	;'P'
   169  03FA  343D               	retlw	61	;'='
   170  03FB  3400               	retlw	0
   171                           
   172                           	psect	cinit
   173  0015                     start_initialization:	
   174                           ; #config settings
   175                           
   176  0015                     __initialization:	
   177                           
   178                           ; Clear objects allocated to BANK0
   179  0015  1283               	bcf	3,5	;RP0=0, select bank0
   180  0016  1303               	bcf	3,6	;RP1=0, select bank0
   181  0017  01B9               	clrf	__pbssBANK0& (0+127)
   182  0018  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   183  0019  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   184  001A  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   185  001B  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   186  001C  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   187  001D  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   188  001E  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   189  001F                     end_of_initialization:	
   190                           ;End of C runtime variable initialization code
   191                           
   192  001F                     __end_of__initialization:	
   193  001F  0183               	clrf	3
   194  0020  120A  118A  2ACE   	ljmp	_main	;jump to C main() function
   195                           
   196                           	psect	bssBANK0
   197  0039                     __pbssBANK0:	
   198  0039                     _D:	
   199  0039                     	ds	2
   200  003B                     _I:	
   201  003B                     	ds	2
   202  003D                     _P:	
   203  003D                     	ds	2
   204  003F                     _page_no:	
   205  003F                     	ds	2
   206                           
   207                           	psect	cstackCOMMON
   208  0070                     __pcstackCOMMON:	
   209  0070                     ?_disp_PID:	
   210  0070                     ?_lcd_init:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ?_lcd_string:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_pic_init:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ?_ext_int:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_main:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?i1_lcd_cmd:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     ?i1_lcd_string:	
   229                           ; 1 bytes @ 0x0
   230                           
   231  0070                     ?___wmul:	
   232                           ; 1 bytes @ 0x0
   233                           
   234  0070                     ?___awdiv:	
   235                           ; 2 bytes @ 0x0
   236                           
   237  0070                     ?___awmod:	
   238                           ; 2 bytes @ 0x0
   239                           
   240  0070                     ___wmul@multiplier:	
   241                           ; 2 bytes @ 0x0
   242                           
   243  0070                     ___awdiv@divisor:	
   244                           ; 2 bytes @ 0x0
   245                           
   246  0070                     ___awmod@divisor:	
   247                           ; 2 bytes @ 0x0
   248                           
   249  0070                     i1lcd_cmd@c:	
   250                           ; 2 bytes @ 0x0
   251                           
   252                           
   253                           ; 2 bytes @ 0x0
   254  0070                     	ds	2
   255  0072                     ??i1_lcd_cmd:	
   256  0072                     ___wmul@multiplicand:	
   257                           ; 1 bytes @ 0x2
   258                           
   259  0072                     ___awdiv@dividend:	
   260                           ; 2 bytes @ 0x2
   261                           
   262  0072                     ___awmod@dividend:	
   263                           ; 2 bytes @ 0x2
   264                           
   265                           
   266                           ; 2 bytes @ 0x2
   267  0072                     	ds	2
   268  0074                     ??___wmul:	
   269  0074                     ??___awdiv:	
   270                           ; 1 bytes @ 0x4
   271                           
   272  0074                     ??___awmod:	
   273                           ; 1 bytes @ 0x4
   274                           
   275  0074                     ___wmul@product:	
   276                           ; 1 bytes @ 0x4
   277                           
   278                           
   279                           ; 2 bytes @ 0x4
   280  0074                     	ds	1
   281  0075                     ___awdiv@counter:	
   282  0075                     ___awmod@counter:	
   283                           ; 1 bytes @ 0x5
   284                           
   285                           
   286                           ; 1 bytes @ 0x5
   287  0075                     	ds	1
   288  0076                     ___awdiv@sign:	
   289  0076                     ___awmod@sign:	
   290                           ; 1 bytes @ 0x6
   291                           
   292                           
   293                           ; 1 bytes @ 0x6
   294  0076                     	ds	1
   295  0077                     ?i1_lcd_data:	
   296  0077                     ___awdiv@quotient:	
   297                           ; 1 bytes @ 0x7
   298                           
   299  0077                     i1lcd_data@d:	
   300                           ; 2 bytes @ 0x7
   301                           
   302                           
   303                           ; 2 bytes @ 0x7
   304  0077                     	ds	2
   305  0079                     ??i1_lcd_data:	
   306                           
   307                           ; 1 bytes @ 0x9
   308  0079                     	ds	2
   309  007B                     ?_lcd_int:	
   310  007B                     ??i1_lcd_string:	
   311                           ; 1 bytes @ 0xB
   312                           
   313  007B                     lcd_int@i:	
   314                           ; 1 bytes @ 0xB
   315                           
   316                           
   317                           ; 2 bytes @ 0xB
   318  007B                     	ds	2
   319  007D                     ??_disp_PID:	
   320                           
   321                           	psect	cstackBANK0
   322  0020                     __pcstackBANK0:	
   323                           ; 1 bytes @ 0xD
   324                           
   325  0020                     ??_lcd_int:	
   326  0020                     i1lcd_string@s:	
   327                           ; 1 bytes @ 0x0
   328                           
   329                           
   330                           ; 1 bytes @ 0x0
   331  0020                     	ds	1
   332  0021                     i1lcd_string@i:	
   333                           
   334                           ; 2 bytes @ 0x1
   335  0021                     	ds	1
   336  0022                     lcd_int@j:	
   337                           
   338                           ; 2 bytes @ 0x2
   339  0022                     	ds	2
   340  0024                     ??_ext_int:	
   341                           
   342                           ; 1 bytes @ 0x4
   343  0024                     	ds	7
   344  002B                     ext_int@j:	
   345                           
   346                           ; 2 bytes @ 0xB
   347  002B                     	ds	2
   348  002D                     ?_lcd_cmd:	
   349  002D                     ?_lcd_data:	
   350                           ; 1 bytes @ 0xD
   351                           
   352  002D                     ??_pic_init:	
   353                           ; 1 bytes @ 0xD
   354                           
   355  002D                     lcd_cmd@c:	
   356                           ; 1 bytes @ 0xD
   357                           
   358  002D                     lcd_data@d:	
   359                           ; 2 bytes @ 0xD
   360                           
   361                           
   362                           ; 2 bytes @ 0xD
   363  002D                     	ds	2
   364  002F                     ??_lcd_cmd:	
   365  002F                     ??_lcd_data:	
   366                           ; 1 bytes @ 0xF
   367                           
   368                           
   369                           ; 1 bytes @ 0xF
   370  002F                     	ds	2
   371  0031                     ??_lcd_init:	
   372  0031                     ??_lcd_string:	
   373                           ; 1 bytes @ 0x11
   374                           
   375                           
   376                           ; 1 bytes @ 0x11
   377  0031                     	ds	2
   378  0033                     lcd_string@i:	
   379                           
   380                           ; 2 bytes @ 0x13
   381  0033                     	ds	2
   382  0035                     lcd_string@s:	
   383                           
   384                           ; 1 bytes @ 0x15
   385  0035                     	ds	1
   386  0036                     ??_main:	
   387                           
   388                           ; 1 bytes @ 0x16
   389  0036                     	ds	3
   390                           
   391                           	psect	maintext
   392  02CE                     __pmaintext:	
   393 ;;
   394 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   395 ;;
   396 ;; *************** function _main *****************
   397 ;; Defined at:
   398 ;;		line 80 in file "main.c"
   399 ;; Parameters:    Size  Location     Type
   400 ;;		None
   401 ;; Auto vars:     Size  Location     Type
   402 ;;		None
   403 ;; Return value:  Size  Location     Type
   404 ;;                  1    wreg      void 
   405 ;; Registers used:
   406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   407 ;; Tracked objects:
   408 ;;		On entry : B00/0
   409 ;;		On exit  : 0/0
   410 ;;		Unchanged: 0/0
   411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   412 ;;      Params:         0       0       0       0       0
   413 ;;      Locals:         0       0       0       0       0
   414 ;;      Temps:          0       3       0       0       0
   415 ;;      Totals:         0       3       0       0       0
   416 ;;Total ram usage:        3 bytes
   417 ;; Hardware stack levels required when called:    6
   418 ;; This function calls:
   419 ;;		_lcd_cmd
   420 ;;		_lcd_init
   421 ;;		_lcd_string
   422 ;;		_pic_init
   423 ;; This function is called by:
   424 ;;		Startup code after reset
   425 ;; This function uses a non-reentrant model
   426 ;;
   427                           
   428                           
   429                           ;psect for function _main
   430  02CE                     _main:	
   431                           
   432                           ;main.c: 81: pic_init();
   433                           
   434                           ;incstack = 0
   435                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   436  02CE  120A  118A  23FC  120A  118A  	fcall	_pic_init
   437                           
   438                           ;main.c: 82: lcd_init();
   439  02D3  120A  118A  217C  120A  118A  	fcall	_lcd_init
   440                           
   441                           ;main.c: 83: lcd_string("kriz Quad Tx");
   442  02D8  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   443  02D9  120A  118A  2367  120A  118A  	fcall	_lcd_string
   444                           
   445                           ;main.c: 84: _delay((unsigned long)((500)*(16000000/4000.0)));
   446  02DE  300B               	movlw	11
   447  02DF  1283               	bcf	3,5	;RP0=0, select bank0
   448  02E0  1303               	bcf	3,6	;RP1=0, select bank0
   449  02E1  00B8               	movwf	??_main+2
   450  02E2  3026               	movlw	38
   451  02E3  00B7               	movwf	??_main+1
   452  02E4  305D               	movlw	93
   453  02E5  00B6               	movwf	??_main
   454  02E6                     u677:	
   455  02E6  0BB6               	decfsz	??_main,f
   456  02E7  2AE6               	goto	u677
   457  02E8  0BB7               	decfsz	??_main+1,f
   458  02E9  2AE6               	goto	u677
   459  02EA  0BB8               	decfsz	??_main+2,f
   460  02EB  2AE6               	goto	u677
   461                           
   462                           ;main.c: 85: lcd_cmd(0x01);
   463  02EC  3001               	movlw	1
   464  02ED  1283               	bcf	3,5	;RP0=0, select bank0
   465  02EE  1303               	bcf	3,6	;RP1=0, select bank0
   466  02EF  00AD               	movwf	lcd_cmd@c
   467  02F0  3000               	movlw	0
   468  02F1  00AE               	movwf	lcd_cmd@c+1
   469  02F2  120A  118A  2298  120A  118A  	fcall	_lcd_cmd
   470  02F7                     l1103:	
   471                           ;main.c: 86: while(1)
   472                           
   473                           
   474                           ;main.c: 87: {
   475                           ;main.c: 88: _delay((unsigned long)((10)*(16000000/4000.0)));
   476  02F7  3034               	movlw	52
   477  02F8  1283               	bcf	3,5	;RP0=0, select bank0
   478  02F9  1303               	bcf	3,6	;RP1=0, select bank0
   479  02FA  00B7               	movwf	??_main+1
   480  02FB  30F1               	movlw	241
   481  02FC  00B6               	movwf	??_main
   482  02FD                     u687:	
   483  02FD  0BB6               	decfsz	??_main,f
   484  02FE  2AFD               	goto	u687
   485  02FF  0BB7               	decfsz	??_main+1,f
   486  0300  2AFD               	goto	u687
   487  0301  2AF7               	goto	l1103
   488  0302                     __end_of_main:	
   489                           ;main.c: 89: }
   490                           ;main.c: 90: return;
   491                           
   492                           
   493                           	psect	text1
   494  03FC                     __ptext1:	
   495 ;; *************** function _pic_init *****************
   496 ;; Defined at:
   497 ;;		line 17 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;		None
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg, status,2, status,0
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   511 ;;      Params:         0       0       0       0       0
   512 ;;      Locals:         0       0       0       0       0
   513 ;;      Temps:          0       1       0       0       0
   514 ;;      Totals:         0       1       0       0       0
   515 ;;Total ram usage:        1 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; Hardware stack levels required when called:    4
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525                           
   526                           ;psect for function _pic_init
   527  03FC                     _pic_init:	
   528                           
   529                           ;main.c: 19: TRISD = 0x00;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _pic_init: [wreg+status,2+status,0]
   533  03FC  1683               	bsf	3,5	;RP0=1, select bank1
   534  03FD  1303               	bcf	3,6	;RP1=0, select bank1
   535  03FE  0188               	clrf	8	;volatile
   536                           
   537                           ;main.c: 20: PORTD = 0x00;
   538  03FF  1283               	bcf	3,5	;RP0=0, select bank0
   539  0400  1303               	bcf	3,6	;RP1=0, select bank0
   540  0401  0188               	clrf	8	;volatile
   541                           
   542                           ;main.c: 21: TRISB &= 0xFC;
   543  0402  30FC               	movlw	252
   544  0403  00AD               	movwf	??_pic_init
   545  0404  082D               	movf	??_pic_init,w
   546  0405  1683               	bsf	3,5	;RP0=1, select bank1
   547  0406  1303               	bcf	3,6	;RP1=0, select bank1
   548  0407  0586               	andwf	6,f	;volatile
   549                           
   550                           ;main.c: 22: OPTION_REG |= 0x40;
   551  0408  1701               	bsf	1,6	;volatile
   552                           
   553                           ;main.c: 23: INTCON |= 0x90;
   554  0409  3090               	movlw	144
   555  040A  1283               	bcf	3,5	;RP0=0, select bank0
   556  040B  1303               	bcf	3,6	;RP1=0, select bank0
   557  040C  00AD               	movwf	??_pic_init
   558  040D  082D               	movf	??_pic_init,w
   559  040E  048B               	iorwf	11,f	;volatile
   560  040F  0008               	return
   561  0410                     __end_of_pic_init:	
   562                           
   563                           	psect	text2
   564  0367                     __ptext2:	
   565 ;; *************** function _lcd_string *****************
   566 ;; Defined at:
   567 ;;		line 51 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  s               1    wreg     PTR unsigned char 
   570 ;;		 -> STR_4(13), STR_3(3), STR_2(3), STR_1(3), 
   571 ;; Auto vars:     Size  Location     Type
   572 ;;  s               1   21[BANK0 ] PTR unsigned char 
   573 ;;		 -> STR_4(13), STR_3(3), STR_2(3), STR_1(3), 
   574 ;;  i               2   19[BANK0 ] int 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  1    wreg      void 
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       0       0       0       0
   585 ;;      Locals:         0       3       0       0       0
   586 ;;      Temps:          0       2       0       0       0
   587 ;;      Totals:         0       5       0       0       0
   588 ;;Total ram usage:        5 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    5
   591 ;; This function calls:
   592 ;;		_lcd_data
   593 ;; This function is called by:
   594 ;;		_main
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           
   599                           ;psect for function _lcd_string
   600  0367                     _lcd_string:	
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   604                           ;lcd_string@s stored from wreg
   605  0367  1283               	bcf	3,5	;RP0=0, select bank0
   606  0368  1303               	bcf	3,6	;RP1=0, select bank0
   607  0369  00B5               	movwf	lcd_string@s
   608                           
   609                           ;lcd.h: 53: int i=0;
   610  036A  01B3               	clrf	lcd_string@i
   611  036B  01B4               	clrf	lcd_string@i+1
   612  036C                     l1033:	
   613                           ;lcd.h: 54: while(s[i] != '\0')
   614                           
   615  036C  0833               	movf	lcd_string@i,w
   616  036D  0735               	addwf	lcd_string@s,w
   617  036E  0084               	movwf	4
   618  036F  120A  118A  23E0  120A  118A  	fcall	stringdir
   619  0374  3A00               	xorlw	0
   620  0375  1903               	btfsc	3,2
   621  0376  0008               	return
   622                           
   623                           ;lcd.h: 55: {
   624                           ;lcd.h: 56: lcd_data(s[i]);
   625  0377  0833               	movf	lcd_string@i,w
   626  0378  0735               	addwf	lcd_string@s,w
   627  0379  0084               	movwf	4
   628  037A  120A  118A  23E0  120A  118A  	fcall	stringdir
   629  037F  00B1               	movwf	??_lcd_string
   630  0380  01B2               	clrf	??_lcd_string+1
   631  0381  0831               	movf	??_lcd_string,w
   632  0382  00AD               	movwf	lcd_data@d
   633  0383  0832               	movf	??_lcd_string+1,w
   634  0384  00AE               	movwf	lcd_data@d+1
   635  0385  120A  118A  2261  120A  118A  	fcall	_lcd_data
   636                           
   637                           ;lcd.h: 57: i++;
   638  038A  3001               	movlw	1
   639  038B  1283               	bcf	3,5	;RP0=0, select bank0
   640  038C  1303               	bcf	3,6	;RP1=0, select bank0
   641  038D  07B3               	addwf	lcd_string@i,f
   642  038E  1803               	skipnc
   643  038F  0AB4               	incf	lcd_string@i+1,f
   644  0390  3000               	movlw	0
   645  0391  07B4               	addwf	lcd_string@i+1,f
   646  0392  2B6C               	goto	l1033
   647  0393                     __end_of_lcd_string:	
   648                           
   649                           	psect	text3
   650  0261                     __ptext3:	
   651 ;; *************** function _lcd_data *****************
   652 ;; Defined at:
   653 ;;		line 39 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  d               2   13[BANK0 ] int 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       2       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          0       2       0       0       0
   670 ;;      Totals:         0       4       0       0       0
   671 ;;Total ram usage:        4 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    4
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_lcd_string
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _lcd_data
   683  0261                     _lcd_data:	
   684                           
   685                           ;lcd.h: 41: PORTD = (d & 0xF0) | (0x04);
   686                           
   687                           ;incstack = 0
   688                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
   689  0261  1283               	bcf	3,5	;RP0=0, select bank0
   690  0262  1303               	bcf	3,6	;RP1=0, select bank0
   691  0263  082D               	movf	lcd_data@d,w
   692  0264  39F0               	andlw	240
   693  0265  3804               	iorlw	4
   694  0266  0088               	movwf	8	;volatile
   695                           
   696                           ;lcd.h: 42: PORTD |= 0x08;
   697  0267  1588               	bsf	8,3	;volatile
   698                           
   699                           ;lcd.h: 43: _delay((unsigned long)((20)*(16000000/4000.0)));
   700  0268  3068               	movlw	104
   701  0269  1283               	bcf	3,5	;RP0=0, select bank0
   702  026A  1303               	bcf	3,6	;RP1=0, select bank0
   703  026B  00B0               	movwf	??_lcd_data+1
   704  026C  30E3               	movlw	227
   705  026D  00AF               	movwf	??_lcd_data
   706  026E                     u697:	
   707  026E  0BAF               	decfsz	??_lcd_data,f
   708  026F  2A6E               	goto	u697
   709  0270  0BB0               	decfsz	??_lcd_data+1,f
   710  0271  2A6E               	goto	u697
   711  0272  2A73               	nop2
   712                           
   713                           ;lcd.h: 44: PORTD &= 0xF7;
   714  0273  30F7               	movlw	247
   715  0274  1283               	bcf	3,5	;RP0=0, select bank0
   716  0275  1303               	bcf	3,6	;RP1=0, select bank0
   717  0276  00AF               	movwf	??_lcd_data
   718  0277  082F               	movf	??_lcd_data,w
   719  0278  0588               	andwf	8,f	;volatile
   720                           
   721                           ;lcd.h: 45: PORTD = (d << 4) | (0x04);
   722  0279  082D               	movf	lcd_data@d,w
   723  027A  00AF               	movwf	??_lcd_data
   724  027B  3003               	movlw	3
   725  027C                     u595:	
   726  027C  1003               	clrc
   727  027D  0DAF               	rlf	??_lcd_data,f
   728  027E  3EFF               	addlw	-1
   729  027F  1D03               	skipz
   730  0280  2A7C               	goto	u595
   731  0281  1003               	clrc
   732  0282  0D2F               	rlf	??_lcd_data,w
   733  0283  3804               	iorlw	4
   734  0284  0088               	movwf	8	;volatile
   735                           
   736                           ;lcd.h: 46: PORTD |= 0x08;
   737  0285  1588               	bsf	8,3	;volatile
   738                           
   739                           ;lcd.h: 47: _delay((unsigned long)((20)*(16000000/4000.0)));
   740  0286  3068               	movlw	104
   741  0287  1283               	bcf	3,5	;RP0=0, select bank0
   742  0288  1303               	bcf	3,6	;RP1=0, select bank0
   743  0289  00B0               	movwf	??_lcd_data+1
   744  028A  30E3               	movlw	227
   745  028B  00AF               	movwf	??_lcd_data
   746  028C                     u707:	
   747  028C  0BAF               	decfsz	??_lcd_data,f
   748  028D  2A8C               	goto	u707
   749  028E  0BB0               	decfsz	??_lcd_data+1,f
   750  028F  2A8C               	goto	u707
   751  0290  2A91               	nop2
   752                           
   753                           ;lcd.h: 48: PORTD &= 0xF7;
   754  0291  30F7               	movlw	247
   755  0292  1283               	bcf	3,5	;RP0=0, select bank0
   756  0293  1303               	bcf	3,6	;RP1=0, select bank0
   757  0294  00AF               	movwf	??_lcd_data
   758  0295  082F               	movf	??_lcd_data,w
   759  0296  0588               	andwf	8,f	;volatile
   760  0297  0008               	return
   761  0298                     __end_of_lcd_data:	
   762                           
   763                           	psect	text4
   764  017C                     __ptext4:	
   765 ;; *************** function _lcd_init *****************
   766 ;; Defined at:
   767 ;;		line 16 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
   768 ;; Parameters:    Size  Location     Type
   769 ;;		None
   770 ;; Auto vars:     Size  Location     Type
   771 ;;		None
   772 ;; Return value:  Size  Location     Type
   773 ;;                  1    wreg      void 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0, pclath, cstack
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         0       0       0       0       0
   782 ;;      Locals:         0       0       0       0       0
   783 ;;      Temps:          0       3       0       0       0
   784 ;;      Totals:         0       3       0       0       0
   785 ;;Total ram usage:        3 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    5
   788 ;; This function calls:
   789 ;;		_lcd_cmd
   790 ;; This function is called by:
   791 ;;		_main
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function _lcd_init
   797  017C                     _lcd_init:	
   798                           
   799                           ;lcd.h: 18: _delay((unsigned long)((50)*(16000000/4000.0)));
   800                           
   801                           ;incstack = 0
   802                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   803  017C  3002               	movlw	2
   804  017D  1283               	bcf	3,5	;RP0=0, select bank0
   805  017E  1303               	bcf	3,6	;RP1=0, select bank0
   806  017F  00B3               	movwf	??_lcd_init+2
   807  0180  3004               	movlw	4
   808  0181  00B2               	movwf	??_lcd_init+1
   809  0182  30B9               	movlw	185
   810  0183  00B1               	movwf	??_lcd_init
   811  0184                     u717:	
   812  0184  0BB1               	decfsz	??_lcd_init,f
   813  0185  2984               	goto	u717
   814  0186  0BB2               	decfsz	??_lcd_init+1,f
   815  0187  2984               	goto	u717
   816  0188  0BB3               	decfsz	??_lcd_init+2,f
   817  0189  2984               	goto	u717
   818  018A  298B               	nop2
   819                           
   820                           ;lcd.h: 19: lcd_cmd(0x33);
   821  018B  3033               	movlw	51
   822  018C  1283               	bcf	3,5	;RP0=0, select bank0
   823  018D  1303               	bcf	3,6	;RP1=0, select bank0
   824  018E  00AD               	movwf	lcd_cmd@c
   825  018F  3000               	movlw	0
   826  0190  00AE               	movwf	lcd_cmd@c+1
   827  0191  120A  118A  2298  120A  118A  	fcall	_lcd_cmd
   828                           
   829                           ;lcd.h: 20: lcd_cmd(0x32);
   830  0196  3032               	movlw	50
   831  0197  1283               	bcf	3,5	;RP0=0, select bank0
   832  0198  1303               	bcf	3,6	;RP1=0, select bank0
   833  0199  00AD               	movwf	lcd_cmd@c
   834  019A  3000               	movlw	0
   835  019B  00AE               	movwf	lcd_cmd@c+1
   836  019C  120A  118A  2298  120A  118A  	fcall	_lcd_cmd
   837                           
   838                           ;lcd.h: 21: lcd_cmd(0x28);
   839  01A1  3028               	movlw	40
   840  01A2  1283               	bcf	3,5	;RP0=0, select bank0
   841  01A3  1303               	bcf	3,6	;RP1=0, select bank0
   842  01A4  00AD               	movwf	lcd_cmd@c
   843  01A5  3000               	movlw	0
   844  01A6  00AE               	movwf	lcd_cmd@c+1
   845  01A7  120A  118A  2298  120A  118A  	fcall	_lcd_cmd
   846                           
   847                           ;lcd.h: 22: lcd_cmd(0x06);
   848  01AC  3006               	movlw	6
   849  01AD  1283               	bcf	3,5	;RP0=0, select bank0
   850  01AE  1303               	bcf	3,6	;RP1=0, select bank0
   851  01AF  00AD               	movwf	lcd_cmd@c
   852  01B0  3000               	movlw	0
   853  01B1  00AE               	movwf	lcd_cmd@c+1
   854  01B2  120A  118A  2298  120A  118A  	fcall	_lcd_cmd
   855                           
   856                           ;lcd.h: 23: lcd_cmd(0x0E);
   857  01B7  300E               	movlw	14
   858  01B8  1283               	bcf	3,5	;RP0=0, select bank0
   859  01B9  1303               	bcf	3,6	;RP1=0, select bank0
   860  01BA  00AD               	movwf	lcd_cmd@c
   861  01BB  3000               	movlw	0
   862  01BC  00AE               	movwf	lcd_cmd@c+1
   863  01BD  120A  118A  2298  120A  118A  	fcall	_lcd_cmd
   864                           
   865                           ;lcd.h: 24: lcd_cmd(0x01);
   866  01C2  3001               	movlw	1
   867  01C3  1283               	bcf	3,5	;RP0=0, select bank0
   868  01C4  1303               	bcf	3,6	;RP1=0, select bank0
   869  01C5  00AD               	movwf	lcd_cmd@c
   870  01C6  3000               	movlw	0
   871  01C7  00AE               	movwf	lcd_cmd@c+1
   872  01C8  120A  118A  2298   	fcall	_lcd_cmd
   873  01CB  0008               	return
   874  01CC                     __end_of_lcd_init:	
   875                           
   876                           	psect	text5
   877  0298                     __ptext5:	
   878 ;; *************** function _lcd_cmd *****************
   879 ;; Defined at:
   880 ;;		line 27 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
   881 ;; Parameters:    Size  Location     Type
   882 ;;  c               2   13[BANK0 ] int 
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   894 ;;      Params:         0       2       0       0       0
   895 ;;      Locals:         0       0       0       0       0
   896 ;;      Temps:          0       2       0       0       0
   897 ;;      Totals:         0       4       0       0       0
   898 ;;Total ram usage:        4 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    4
   901 ;; This function calls:
   902 ;;		Nothing
   903 ;; This function is called by:
   904 ;;		_lcd_init
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _lcd_cmd
   911  0298                     _lcd_cmd:	
   912                           
   913                           ;lcd.h: 29: PORTD = (c & 0xF0);
   914                           
   915                           ;incstack = 0
   916                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0]
   917  0298  1283               	bcf	3,5	;RP0=0, select bank0
   918  0299  1303               	bcf	3,6	;RP1=0, select bank0
   919  029A  082D               	movf	lcd_cmd@c,w
   920  029B  39F0               	andlw	240
   921  029C  0088               	movwf	8	;volatile
   922                           
   923                           ;lcd.h: 30: PORTD |= 0x08;
   924  029D  1588               	bsf	8,3	;volatile
   925                           
   926                           ;lcd.h: 31: _delay((unsigned long)((20)*(16000000/4000.0)));
   927  029E  3068               	movlw	104
   928  029F  1283               	bcf	3,5	;RP0=0, select bank0
   929  02A0  1303               	bcf	3,6	;RP1=0, select bank0
   930  02A1  00B0               	movwf	??_lcd_cmd+1
   931  02A2  30E3               	movlw	227
   932  02A3  00AF               	movwf	??_lcd_cmd
   933  02A4                     u727:	
   934  02A4  0BAF               	decfsz	??_lcd_cmd,f
   935  02A5  2AA4               	goto	u727
   936  02A6  0BB0               	decfsz	??_lcd_cmd+1,f
   937  02A7  2AA4               	goto	u727
   938  02A8  2AA9               	nop2
   939                           
   940                           ;lcd.h: 32: PORTD &= 0xF7;
   941  02A9  30F7               	movlw	247
   942  02AA  1283               	bcf	3,5	;RP0=0, select bank0
   943  02AB  1303               	bcf	3,6	;RP1=0, select bank0
   944  02AC  00AF               	movwf	??_lcd_cmd
   945  02AD  082F               	movf	??_lcd_cmd,w
   946  02AE  0588               	andwf	8,f	;volatile
   947                           
   948                           ;lcd.h: 33: PORTD = (c << 4) & (0xF0);
   949  02AF  082D               	movf	lcd_cmd@c,w
   950  02B0  00AF               	movwf	??_lcd_cmd
   951  02B1  3003               	movlw	3
   952  02B2                     u585:	
   953  02B2  1003               	clrc
   954  02B3  0DAF               	rlf	??_lcd_cmd,f
   955  02B4  3EFF               	addlw	-1
   956  02B5  1D03               	skipz
   957  02B6  2AB2               	goto	u585
   958  02B7  1003               	clrc
   959  02B8  0D2F               	rlf	??_lcd_cmd,w
   960  02B9  39F0               	andlw	240
   961  02BA  0088               	movwf	8	;volatile
   962                           
   963                           ;lcd.h: 34: PORTD |= 0x08;
   964  02BB  1588               	bsf	8,3	;volatile
   965                           
   966                           ;lcd.h: 35: _delay((unsigned long)((20)*(16000000/4000.0)));
   967  02BC  3068               	movlw	104
   968  02BD  1283               	bcf	3,5	;RP0=0, select bank0
   969  02BE  1303               	bcf	3,6	;RP1=0, select bank0
   970  02BF  00B0               	movwf	??_lcd_cmd+1
   971  02C0  30E3               	movlw	227
   972  02C1  00AF               	movwf	??_lcd_cmd
   973  02C2                     u737:	
   974  02C2  0BAF               	decfsz	??_lcd_cmd,f
   975  02C3  2AC2               	goto	u737
   976  02C4  0BB0               	decfsz	??_lcd_cmd+1,f
   977  02C5  2AC2               	goto	u737
   978  02C6  2AC7               	nop2
   979                           
   980                           ;lcd.h: 36: PORTD &= 0xF7;
   981  02C7  30F7               	movlw	247
   982  02C8  1283               	bcf	3,5	;RP0=0, select bank0
   983  02C9  1303               	bcf	3,6	;RP1=0, select bank0
   984  02CA  00AF               	movwf	??_lcd_cmd
   985  02CB  082F               	movf	??_lcd_cmd,w
   986  02CC  0588               	andwf	8,f	;volatile
   987  02CD  0008               	return
   988  02CE                     __end_of_lcd_cmd:	
   989                           
   990                           	psect	text6
   991  0217                     __ptext6:	
   992 ;; *************** function _ext_int *****************
   993 ;; Defined at:
   994 ;;		line 26 in file "main.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  j               2   11[BANK0 ] int 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       2       0       0       0
  1010 ;;      Temps:          0       7       0       0       0
  1011 ;;      Totals:         0       9       0       0       0
  1012 ;;Total ram usage:        9 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; Hardware stack levels required when called:    3
  1015 ;; This function calls:
  1016 ;;		_disp_PID
  1017 ;; This function is called by:
  1018 ;;		Interrupt level 1
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _ext_int
  1024  0217                     _ext_int:	
  1025                           
  1026                           ;main.c: 28: if(INTE & INTF)
  1027  0217  3001               	movlw	1
  1028  0218  1E0B               	btfss	11,4	;volatile
  1029  0219  3900               	andlw	0
  1030  021A  1C8B               	btfss	11,1	;volatile
  1031  021B  3900               	andlw	0
  1032  021C  3800               	iorlw	0
  1033  021D  1903               	skipnz
  1034  021E  2A54               	goto	i1l64
  1035                           
  1036                           ;main.c: 29: {
  1037                           ;main.c: 30: INTCON &= 0xEF;
  1038  021F  30EF               	movlw	239
  1039  0220  00A4               	movwf	??_ext_int
  1040  0221  0824               	movf	??_ext_int,w
  1041  0222  058B               	andwf	11,f	;volatile
  1042                           
  1043                           ;main.c: 31: INTF = 0;
  1044  0223  108B               	bcf	11,1	;volatile
  1045                           
  1046                           ;main.c: 32: page_no++;
  1047  0224  3001               	movlw	1
  1048  0225  07BF               	addwf	_page_no,f
  1049  0226  1803               	skipnc
  1050  0227  0AC0               	incf	_page_no+1,f
  1051  0228  3000               	movlw	0
  1052  0229  07C0               	addwf	_page_no+1,f
  1053                           
  1054                           ;main.c: 33: int j=0;
  1055  022A  01AB               	clrf	ext_int@j
  1056  022B  01AC               	clrf	ext_int@j+1
  1057  022C                     i1l1091:	
  1058                           ;main.c: 34: while(j<3)
  1059                           
  1060  022C  082C               	movf	ext_int@j+1,w
  1061  022D  3A80               	xorlw	128
  1062  022E  00FF               	movwf	127
  1063  022F  3080               	movlw	128
  1064  0230  027F               	subwf	127,w
  1065  0231  1D03               	skipz
  1066  0232  2A35               	goto	u66_25
  1067  0233  3003               	movlw	3
  1068  0234  022B               	subwf	ext_int@j,w
  1069  0235                     u66_25:	
  1070  0235  1803               	btfsc	3,0
  1071  0236  2A4E               	goto	i1l63
  1072                           
  1073                           ;main.c: 35: {
  1074                           ;main.c: 36: _delay((unsigned long)((500)*(16000000/4000.0)));
  1075  0237  300B               	movlw	11
  1076  0238  1283               	bcf	3,5	;RP0=0, select bank0
  1077  0239  1303               	bcf	3,6	;RP1=0, select bank0
  1078  023A  00A6               	movwf	??_ext_int+2
  1079  023B  3026               	movlw	38
  1080  023C  00A5               	movwf	??_ext_int+1
  1081  023D  305D               	movlw	93
  1082  023E  00A4               	movwf	??_ext_int
  1083  023F                     u74_27:	
  1084  023F  0BA4               	decfsz	??_ext_int,f
  1085  0240  2A3F               	goto	u74_27
  1086  0241  0BA5               	decfsz	??_ext_int+1,f
  1087  0242  2A3F               	goto	u74_27
  1088  0243  0BA6               	decfsz	??_ext_int+2,f
  1089  0244  2A3F               	goto	u74_27
  1090                           
  1091                           ;main.c: 37: ++j;
  1092  0245  3001               	movlw	1
  1093  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1094  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1095  0248  07AB               	addwf	ext_int@j,f
  1096  0249  1803               	skipnc
  1097  024A  0AAC               	incf	ext_int@j+1,f
  1098  024B  3000               	movlw	0
  1099  024C  07AC               	addwf	ext_int@j+1,f
  1100  024D  2A2C               	goto	i1l1091
  1101  024E                     i1l63:	
  1102                           
  1103                           ;main.c: 38: }
  1104                           ;main.c: 39: INTCON |= 0x10;
  1105  024E  160B               	bsf	11,4	;volatile
  1106                           
  1107                           ;main.c: 40: disp_PID();
  1108  024F  120A  118A  2023  120A  118A  	fcall	_disp_PID
  1109  0254                     i1l64:	
  1110  0254  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0255  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0256  082A               	movf	??_ext_int+6,w
  1113  0257  00FF               	movwf	127
  1114  0258  0829               	movf	??_ext_int+5,w
  1115  0259  008A               	movwf	10
  1116  025A  0828               	movf	??_ext_int+4,w
  1117  025B  0084               	movwf	4
  1118  025C  0E27               	swapf	(??_ext_int+3)^0,w
  1119  025D  0083               	movwf	3
  1120  025E  0EFE               	swapf	126,f
  1121  025F  0E7E               	swapf	126,w
  1122  0260  0009               	retfie
  1123  0261                     __end_of_ext_int:	
  1124                           
  1125                           	psect	intentry
  1126  0004                     __pintentry:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _ext_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1129                           
  1130  0004                     interrupt_function:	
  1131  007E                     saved_w	set	btemp
  1132  0004  00FE               	movwf	btemp
  1133  0005  0E03               	swapf	3,w
  1134  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1135  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1136  0008  00A7               	movwf	??_ext_int+3
  1137  0009  0804               	movf	4,w
  1138  000A  00A8               	movwf	??_ext_int+4
  1139  000B  080A               	movf	10,w
  1140  000C  00A9               	movwf	??_ext_int+5
  1141  000D  087F               	movf	btemp+1,w
  1142  000E  00AA               	movwf	??_ext_int+6
  1143  000F  120A  118A  2A17   	ljmp	_ext_int
  1144                           
  1145                           	psect	text7
  1146  0023                     __ptext7:	
  1147 ;; *************** function _disp_PID *****************
  1148 ;; Defined at:
  1149 ;;		line 44 in file "main.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;                  1    wreg      void 
  1156 ;; Registers used:
  1157 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    2
  1170 ;; This function calls:
  1171 ;;		_lcd_int
  1172 ;;		i1_lcd_cmd
  1173 ;;		i1_lcd_string
  1174 ;; This function is called by:
  1175 ;;		_ext_int
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _disp_PID
  1181  0023                     _disp_PID:	
  1182                           
  1183                           ;main.c: 46: switch(page_no)
  1184                           
  1185                           ;incstack = 0
  1186                           ; Regs used in _disp_PID: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1187  0023  2892               	goto	i1l1073
  1188  0024                     i1l1045:	
  1189                           ;main.c: 47: {
  1190                           ;main.c: 48: case 1:
  1191                           
  1192                           
  1193                           ;main.c: 49: {
  1194                           ;main.c: 50: lcd_cmd(0x01);
  1195  0024  3001               	movlw	1
  1196  0025  00F0               	movwf	i1lcd_cmd@c
  1197  0026  3000               	movlw	0
  1198  0027  00F1               	movwf	i1lcd_cmd@c+1
  1199  0028  120A  118A  2335  120A  118A  	fcall	i1_lcd_cmd
  1200                           
  1201                           ;main.c: 51: lcd_string("P=");
  1202  002D  3014               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1203  002E  120A  118A  2393  120A  118A  	fcall	i1_lcd_string
  1204                           
  1205                           ;main.c: 52: lcd_cmd(0xC0);
  1206  0033  30C0               	movlw	192
  1207  0034  00F0               	movwf	i1lcd_cmd@c
  1208  0035  3000               	movlw	0
  1209  0036  00F1               	movwf	i1lcd_cmd@c+1
  1210  0037  120A  118A  2335  120A  118A  	fcall	i1_lcd_cmd
  1211                           
  1212                           ;main.c: 53: lcd_int(P);
  1213  003C  1283               	bcf	3,5	;RP0=0, select bank0
  1214  003D  1303               	bcf	3,6	;RP1=0, select bank0
  1215  003E  083E               	movf	_P+1,w
  1216  003F  00FC               	movwf	lcd_int@i+1
  1217  0040  083D               	movf	_P,w
  1218  0041  00FB               	movwf	lcd_int@i
  1219  0042  120A  118A  20A8   	fcall	_lcd_int
  1220                           
  1221                           ;main.c: 54: break;
  1222  0045  0008               	return
  1223  0046                     i1l1053:	
  1224                           ;main.c: 55: }
  1225                           ;main.c: 56: case 2:
  1226                           
  1227                           
  1228                           ;main.c: 57: {
  1229                           ;main.c: 58: lcd_cmd(0x01);
  1230  0046  3001               	movlw	1
  1231  0047  00F0               	movwf	i1lcd_cmd@c
  1232  0048  3000               	movlw	0
  1233  0049  00F1               	movwf	i1lcd_cmd@c+1
  1234  004A  120A  118A  2335  120A  118A  	fcall	i1_lcd_cmd
  1235                           
  1236                           ;main.c: 59: lcd_string("I=");
  1237  004F  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1238  0050  120A  118A  2393  120A  118A  	fcall	i1_lcd_string
  1239                           
  1240                           ;main.c: 60: lcd_cmd(0xC0);
  1241  0055  30C0               	movlw	192
  1242  0056  00F0               	movwf	i1lcd_cmd@c
  1243  0057  3000               	movlw	0
  1244  0058  00F1               	movwf	i1lcd_cmd@c+1
  1245  0059  120A  118A  2335  120A  118A  	fcall	i1_lcd_cmd
  1246                           
  1247                           ;main.c: 61: lcd_int(I);
  1248  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1249  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1250  0060  083C               	movf	_I+1,w
  1251  0061  00FC               	movwf	lcd_int@i+1
  1252  0062  083B               	movf	_I,w
  1253  0063  00FB               	movwf	lcd_int@i
  1254  0064  120A  118A  20A8   	fcall	_lcd_int
  1255                           
  1256                           ;main.c: 62: break;
  1257  0067  0008               	return
  1258  0068                     i1l1061:	
  1259                           ;main.c: 63: }
  1260                           ;main.c: 64: case 3:
  1261                           
  1262                           
  1263                           ;main.c: 65: {
  1264                           ;main.c: 66: lcd_cmd(0x01);
  1265  0068  3001               	movlw	1
  1266  0069  00F0               	movwf	i1lcd_cmd@c
  1267  006A  3000               	movlw	0
  1268  006B  00F1               	movwf	i1lcd_cmd@c+1
  1269  006C  120A  118A  2335  120A  118A  	fcall	i1_lcd_cmd
  1270                           
  1271                           ;main.c: 67: lcd_string("D=");
  1272  0071  300E               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1273  0072  120A  118A  2393  120A  118A  	fcall	i1_lcd_string
  1274                           
  1275                           ;main.c: 68: lcd_cmd(0xC0);
  1276  0077  30C0               	movlw	192
  1277  0078  00F0               	movwf	i1lcd_cmd@c
  1278  0079  3000               	movlw	0
  1279  007A  00F1               	movwf	i1lcd_cmd@c+1
  1280  007B  120A  118A  2335  120A  118A  	fcall	i1_lcd_cmd
  1281                           
  1282                           ;main.c: 69: lcd_int(D);
  1283  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1284  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1285  0082  083A               	movf	_D+1,w
  1286  0083  00FC               	movwf	lcd_int@i+1
  1287  0084  0839               	movf	_D,w
  1288  0085  00FB               	movwf	lcd_int@i
  1289  0086  120A  118A  20A8   	fcall	_lcd_int
  1290                           
  1291                           ;main.c: 70: break;
  1292  0089  0008               	return
  1293  008A                     i1l1069:	
  1294                           ;main.c: 71: }
  1295                           ;main.c: 72: case 4:
  1296                           
  1297                           
  1298                           ;main.c: 73: {
  1299                           ;main.c: 74: lcd_cmd(0x01);
  1300  008A  3001               	movlw	1
  1301  008B  00F0               	movwf	i1lcd_cmd@c
  1302  008C  3000               	movlw	0
  1303  008D  00F1               	movwf	i1lcd_cmd@c+1
  1304  008E  120A  118A  2335   	fcall	i1_lcd_cmd
  1305                           
  1306                           ;main.c: 76: }
  1307                           ;main.c: 77: }
  1308                           
  1309                           ;main.c: 75: break;
  1310  0091  0008               	return
  1311  0092                     i1l1073:	
  1312                           
  1313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1314                           ; Switch size 1, requested type "space"
  1315                           ; Number of cases is 1, Range of values is 0 to 0
  1316                           ; switch strategies available:
  1317                           ; Name         Instructions Cycles
  1318                           ; simple_byte            4     3 (average)
  1319                           ; direct_byte           11     8 (fixed)
  1320                           ; jumptable            260     6 (fixed)
  1321                           ;	Chosen strategy is simple_byte
  1322  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0094  0840               	movf	_page_no+1,w
  1325  0095  3A00               	xorlw	0	; case 0
  1326  0096  1903               	skipnz
  1327  0097  2899               	goto	i1l1125
  1328  0098  28A7               	goto	i1l73
  1329  0099                     i1l1125:	
  1330                           
  1331                           ; Switch size 1, requested type "space"
  1332                           ; Number of cases is 4, Range of values is 1 to 4
  1333                           ; switch strategies available:
  1334                           ; Name         Instructions Cycles
  1335                           ; simple_byte           13     7 (average)
  1336                           ; direct_byte           23    11 (fixed)
  1337                           ; jumptable            263     9 (fixed)
  1338                           ;	Chosen strategy is simple_byte
  1339  0099  083F               	movf	_page_no,w
  1340  009A  3A01               	xorlw	1	; case 1
  1341  009B  1903               	skipnz
  1342  009C  2824               	goto	i1l1045
  1343  009D  3A03               	xorlw	3	; case 2
  1344  009E  1903               	skipnz
  1345  009F  2846               	goto	i1l1053
  1346  00A0  3A01               	xorlw	1	; case 3
  1347  00A1  1903               	skipnz
  1348  00A2  2868               	goto	i1l1061
  1349  00A3  3A07               	xorlw	7	; case 4
  1350  00A4  1903               	skipnz
  1351  00A5  288A               	goto	i1l1069
  1352  00A6  28A7               	goto	i1l73
  1353  00A7                     i1l73:	
  1354  00A7  0008               	return
  1355  00A8                     __end_of_disp_PID:	
  1356                           
  1357                           	psect	text8
  1358  0393                     __ptext8:	
  1359 ;; *************** function i1_lcd_string *****************
  1360 ;; Defined at:
  1361 ;;		line 51 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  s               1    wreg     PTR unsigned char 
  1364 ;;		 -> STR_4(13), STR_3(3), STR_2(3), STR_1(3), 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;  s               1    0[BANK0 ] PTR unsigned char 
  1367 ;;		 -> STR_4(13), STR_3(3), STR_2(3), STR_1(3), 
  1368 ;;  lcd_string      2    1[BANK0 ] int 
  1369 ;; Return value:  Size  Location     Type
  1370 ;;                  1    wreg      void 
  1371 ;; Registers used:
  1372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1378 ;;      Params:         0       0       0       0       0
  1379 ;;      Locals:         0       3       0       0       0
  1380 ;;      Temps:          2       0       0       0       0
  1381 ;;      Totals:         2       3       0       0       0
  1382 ;;Total ram usage:        5 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    1
  1385 ;; This function calls:
  1386 ;;		i1_lcd_data
  1387 ;; This function is called by:
  1388 ;;		_disp_PID
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           
  1392                           
  1393                           ;psect for function i1_lcd_string
  1394  0393                     i1_lcd_string:	
  1395                           
  1396                           ;incstack = 0
  1397                           ; Regs used in i1_lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1398                           ;i1lcd_string@s stored from wreg
  1399  0393  1283               	bcf	3,5	;RP0=0, select bank0
  1400  0394  1303               	bcf	3,6	;RP1=0, select bank0
  1401  0395  00A0               	movwf	i1lcd_string@s
  1402                           
  1403                           ;lcd.h: 53: int i=0;
  1404  0396  01A1               	clrf	i1lcd_string@i
  1405  0397  01A2               	clrf	i1lcd_string@i+1
  1406  0398                     i1l1011:	
  1407                           ;lcd.h: 54: while(s[i] != '\0')
  1408                           
  1409  0398  0821               	movf	i1lcd_string@i,w
  1410  0399  0720               	addwf	i1lcd_string@s,w
  1411  039A  0084               	movwf	4
  1412  039B  120A  118A  23E0  120A  118A  	fcall	stringdir
  1413  03A0  3A00               	xorlw	0
  1414  03A1  1903               	btfsc	3,2
  1415  03A2  0008               	return
  1416                           
  1417                           ;lcd.h: 55: {
  1418                           ;lcd.h: 56: lcd_data(s[i]);
  1419  03A3  0821               	movf	i1lcd_string@i,w
  1420  03A4  0720               	addwf	i1lcd_string@s,w
  1421  03A5  0084               	movwf	4
  1422  03A6  120A  118A  23E0  120A  118A  	fcall	stringdir
  1423  03AB  00FB               	movwf	??i1_lcd_string
  1424  03AC  01FC               	clrf	??i1_lcd_string+1
  1425  03AD  087B               	movf	??i1_lcd_string,w
  1426  03AE  00F7               	movwf	i1lcd_data@d
  1427  03AF  087C               	movf	??i1_lcd_string+1,w
  1428  03B0  00F8               	movwf	i1lcd_data@d+1
  1429  03B1  120A  118A  2302  120A  118A  	fcall	i1_lcd_data
  1430                           
  1431                           ;lcd.h: 57: i++;
  1432  03B6  3001               	movlw	1
  1433  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  1434  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  1435  03B9  07A1               	addwf	i1lcd_string@i,f
  1436  03BA  1803               	skipnc
  1437  03BB  0AA2               	incf	i1lcd_string@i+1,f
  1438  03BC  3000               	movlw	0
  1439  03BD  07A2               	addwf	i1lcd_string@i+1,f
  1440  03BE  2B98               	goto	i1l1011
  1441  03BF                     __end_ofi1_lcd_string:	
  1442                           
  1443                           	psect	text9
  1444  0335                     __ptext9:	
  1445 ;; *************** function i1_lcd_cmd *****************
  1446 ;; Defined at:
  1447 ;;		line 27 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
  1448 ;; Parameters:    Size  Location     Type
  1449 ;;  c               2    0[COMMON] int 
  1450 ;; Auto vars:     Size  Location     Type
  1451 ;;		None
  1452 ;; Return value:  Size  Location     Type
  1453 ;;                  1    wreg      void 
  1454 ;; Registers used:
  1455 ;;		wreg, status,2, status,0
  1456 ;; Tracked objects:
  1457 ;;		On entry : 0/0
  1458 ;;		On exit  : 0/0
  1459 ;;		Unchanged: 0/0
  1460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1461 ;;      Params:         2       0       0       0       0
  1462 ;;      Locals:         0       0       0       0       0
  1463 ;;      Temps:          2       0       0       0       0
  1464 ;;      Totals:         4       0       0       0       0
  1465 ;;Total ram usage:        4 bytes
  1466 ;; Hardware stack levels used:    1
  1467 ;; This function calls:
  1468 ;;		Nothing
  1469 ;; This function is called by:
  1470 ;;		_disp_PID
  1471 ;; This function uses a non-reentrant model
  1472 ;;
  1473                           
  1474                           
  1475                           ;psect for function i1_lcd_cmd
  1476  0335                     i1_lcd_cmd:	
  1477                           
  1478                           ;lcd.h: 29: PORTD = (c & 0xF0);
  1479                           
  1480                           ;incstack = 0
  1481                           ; Regs used in i1_lcd_cmd: [wreg+status,2+status,0]
  1482  0335  0870               	movf	i1lcd_cmd@c,w
  1483  0336  39F0               	andlw	240
  1484  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1485  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1486  0339  0088               	movwf	8	;volatile
  1487                           
  1488                           ;lcd.h: 30: PORTD |= 0x08;
  1489  033A  1588               	bsf	8,3	;volatile
  1490                           
  1491                           ;lcd.h: 31: _delay((unsigned long)((20)*(16000000/4000.0)));
  1492  033B  3068               	movlw	104
  1493  033C  00F3               	movwf	??i1_lcd_cmd+1
  1494  033D  30E4               	movlw	228
  1495  033E  00F2               	movwf	??i1_lcd_cmd
  1496  033F                     u75_27:	
  1497  033F  0BF2               	decfsz	??i1_lcd_cmd,f
  1498  0340  2B3F               	goto	u75_27
  1499  0341  0BF3               	decfsz	??i1_lcd_cmd+1,f
  1500  0342  2B3F               	goto	u75_27
  1501  0343  0000               	nop
  1502                           
  1503                           ;lcd.h: 32: PORTD &= 0xF7;
  1504  0344  30F7               	movlw	247
  1505  0345  00F2               	movwf	??i1_lcd_cmd
  1506  0346  0872               	movf	??i1_lcd_cmd,w
  1507  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0349  0588               	andwf	8,f	;volatile
  1510                           
  1511                           ;lcd.h: 33: PORTD = (c << 4) & (0xF0);
  1512  034A  0870               	movf	i1lcd_cmd@c,w
  1513  034B  00F2               	movwf	??i1_lcd_cmd
  1514  034C  3003               	movlw	3
  1515  034D                     u62_25:	
  1516  034D  1003               	clrc
  1517  034E  0DF2               	rlf	??i1_lcd_cmd,f
  1518  034F  3EFF               	addlw	-1
  1519  0350  1D03               	skipz
  1520  0351  2B4D               	goto	u62_25
  1521  0352  1003               	clrc
  1522  0353  0D72               	rlf	??i1_lcd_cmd,w
  1523  0354  39F0               	andlw	240
  1524  0355  0088               	movwf	8	;volatile
  1525                           
  1526                           ;lcd.h: 34: PORTD |= 0x08;
  1527  0356  1588               	bsf	8,3	;volatile
  1528                           
  1529                           ;lcd.h: 35: _delay((unsigned long)((20)*(16000000/4000.0)));
  1530  0357  3068               	movlw	104
  1531  0358  00F3               	movwf	??i1_lcd_cmd+1
  1532  0359  30E4               	movlw	228
  1533  035A  00F2               	movwf	??i1_lcd_cmd
  1534  035B                     u76_27:	
  1535  035B  0BF2               	decfsz	??i1_lcd_cmd,f
  1536  035C  2B5B               	goto	u76_27
  1537  035D  0BF3               	decfsz	??i1_lcd_cmd+1,f
  1538  035E  2B5B               	goto	u76_27
  1539  035F  0000               	nop
  1540                           
  1541                           ;lcd.h: 36: PORTD &= 0xF7;
  1542  0360  30F7               	movlw	247
  1543  0361  00F2               	movwf	??i1_lcd_cmd
  1544  0362  0872               	movf	??i1_lcd_cmd,w
  1545  0363  1283               	bcf	3,5	;RP0=0, select bank0
  1546  0364  1303               	bcf	3,6	;RP1=0, select bank0
  1547  0365  0588               	andwf	8,f	;volatile
  1548  0366  0008               	return
  1549  0367                     __end_ofi1_lcd_cmd:	
  1550                           
  1551                           	psect	text10
  1552  00A8                     __ptext10:	
  1553 ;; *************** function _lcd_int *****************
  1554 ;; Defined at:
  1555 ;;		line 61 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  i               2   11[COMMON] int 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  j               2    2[BANK0 ] int 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  1    wreg      void 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0, pclath, cstack
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1569 ;;      Params:         2       0       0       0       0
  1570 ;;      Locals:         0       2       0       0       0
  1571 ;;      Temps:          0       2       0       0       0
  1572 ;;      Totals:         2       4       0       0       0
  1573 ;;Total ram usage:        6 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    1
  1576 ;; This function calls:
  1577 ;;		___awdiv
  1578 ;;		___awmod
  1579 ;;		___wmul
  1580 ;;		i1_lcd_data
  1581 ;; This function is called by:
  1582 ;;		_disp_PID
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _lcd_int
  1588  00A8                     _lcd_int:	
  1589                           
  1590                           ;lcd.h: 63: int j=0;
  1591                           
  1592                           ;incstack = 0
  1593                           ; Regs used in _lcd_int: [wreg+status,2+status,0+pclath+cstack]
  1594  00A8  1283               	bcf	3,5	;RP0=0, select bank0
  1595  00A9  1303               	bcf	3,6	;RP1=0, select bank0
  1596  00AA  01A2               	clrf	lcd_int@j
  1597  00AB  01A3               	clrf	lcd_int@j+1
  1598  00AC                     i1l981:	
  1599                           ;lcd.h: 64: while(i!=0)
  1600                           
  1601  00AC  087B               	movf	lcd_int@i,w
  1602  00AD  047C               	iorwf	lcd_int@i+1,w
  1603  00AE  1903               	btfsc	3,2
  1604  00AF  28EE               	goto	i1l983
  1605                           
  1606                           ;lcd.h: 65: {
  1607                           ;lcd.h: 66: j=(j*10)+(i%10);
  1608  00B0  1283               	bcf	3,5	;RP0=0, select bank0
  1609  00B1  1303               	bcf	3,6	;RP1=0, select bank0
  1610  00B2  0823               	movf	lcd_int@j+1,w
  1611  00B3  00F1               	movwf	___wmul@multiplier+1
  1612  00B4  0822               	movf	lcd_int@j,w
  1613  00B5  00F0               	movwf	___wmul@multiplier
  1614  00B6  300A               	movlw	10
  1615  00B7  00F2               	movwf	___wmul@multiplicand
  1616  00B8  3000               	movlw	0
  1617  00B9  00F3               	movwf	___wmul@multiplicand+1
  1618  00BA  120A  118A  23BF  120A  118A  	fcall	___wmul
  1619  00BF  0870               	movf	?___wmul,w
  1620  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1621  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1622  00C2  00A0               	movwf	??_lcd_int
  1623  00C3  0871               	movf	?___wmul+1,w
  1624  00C4  00A1               	movwf	??_lcd_int+1
  1625  00C5  300A               	movlw	10
  1626  00C6  00F0               	movwf	___awmod@divisor
  1627  00C7  3000               	movlw	0
  1628  00C8  00F1               	movwf	___awmod@divisor+1
  1629  00C9  087C               	movf	lcd_int@i+1,w
  1630  00CA  00F3               	movwf	___awmod@dividend+1
  1631  00CB  087B               	movf	lcd_int@i,w
  1632  00CC  00F2               	movwf	___awmod@dividend
  1633  00CD  120A  118A  21CC  120A  118A  	fcall	___awmod
  1634  00D2  0870               	movf	?___awmod,w
  1635  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1636  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1637  00D5  0720               	addwf	??_lcd_int,w
  1638  00D6  00A2               	movwf	lcd_int@j
  1639  00D7  0871               	movf	?___awmod+1,w
  1640  00D8  1803               	skipnc
  1641  00D9  0A71               	incf	?___awmod+1,w
  1642  00DA  0721               	addwf	??_lcd_int+1,w
  1643  00DB  00A3               	movwf	lcd_int@j+1
  1644                           
  1645                           ;lcd.h: 67: i=i/10;
  1646  00DC  300A               	movlw	10
  1647  00DD  00F0               	movwf	___awdiv@divisor
  1648  00DE  3000               	movlw	0
  1649  00DF  00F1               	movwf	___awdiv@divisor+1
  1650  00E0  087C               	movf	lcd_int@i+1,w
  1651  00E1  00F3               	movwf	___awdiv@dividend+1
  1652  00E2  087B               	movf	lcd_int@i,w
  1653  00E3  00F2               	movwf	___awdiv@dividend
  1654  00E4  120A  118A  2123  120A  118A  	fcall	___awdiv
  1655  00E9  0871               	movf	?___awdiv+1,w
  1656  00EA  00FC               	movwf	lcd_int@i+1
  1657  00EB  0870               	movf	?___awdiv,w
  1658  00EC  00FB               	movwf	lcd_int@i
  1659  00ED  28AC               	goto	i1l981
  1660  00EE                     i1l983:	
  1661                           
  1662                           ;lcd.h: 68: }
  1663                           ;lcd.h: 69: i=j;
  1664  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1665  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1666  00F0  0823               	movf	lcd_int@j+1,w
  1667  00F1  00FC               	movwf	lcd_int@i+1
  1668  00F2  0822               	movf	lcd_int@j,w
  1669  00F3                     L1:	
  1670  00F3  00FB               	movwf	lcd_int@i
  1671  00F4  087B               	movf	lcd_int@i,w
  1672  00F5  047C               	iorwf	lcd_int@i+1,w
  1673  00F6  1903               	btfsc	3,2
  1674  00F7  0008               	return
  1675                           
  1676                           ;lcd.h: 71: {
  1677                           ;lcd.h: 72: lcd_data((i%10)+0x30);
  1678                           
  1679                           ;lcd.h: 70: while(i!=0)
  1680  00F8  300A               	movlw	10
  1681  00F9  00F0               	movwf	___awmod@divisor
  1682  00FA  3000               	movlw	0
  1683  00FB  00F1               	movwf	___awmod@divisor+1
  1684  00FC  087C               	movf	lcd_int@i+1,w
  1685  00FD  00F3               	movwf	___awmod@dividend+1
  1686  00FE  087B               	movf	lcd_int@i,w
  1687  00FF  00F2               	movwf	___awmod@dividend
  1688  0100  120A  118A  21CC  120A  118A  	fcall	___awmod
  1689  0105  0870               	movf	?___awmod,w
  1690  0106  3E30               	addlw	48
  1691  0107  00F7               	movwf	i1lcd_data@d
  1692  0108  0871               	movf	?___awmod+1,w
  1693  0109  1803               	skipnc
  1694  010A  3E01               	addlw	1
  1695  010B  3E00               	addlw	0
  1696  010C  00F8               	movwf	i1lcd_data@d+1
  1697  010D  120A  118A  2302  120A  118A  	fcall	i1_lcd_data
  1698                           
  1699                           ;lcd.h: 73: i=i/10;
  1700  0112  300A               	movlw	10
  1701  0113  00F0               	movwf	___awdiv@divisor
  1702  0114  3000               	movlw	0
  1703  0115  00F1               	movwf	___awdiv@divisor+1
  1704  0116  087C               	movf	lcd_int@i+1,w
  1705  0117  00F3               	movwf	___awdiv@dividend+1
  1706  0118  087B               	movf	lcd_int@i,w
  1707  0119  00F2               	movwf	___awdiv@dividend
  1708  011A  120A  118A  2123  120A  118A  	fcall	___awdiv
  1709  011F  0871               	movf	?___awdiv+1,w
  1710  0120  00FC               	movwf	lcd_int@i+1
  1711  0121  0870               	movf	?___awdiv,w
  1712  0122  28F3               	goto	L1
  1713  0123                     __end_of_lcd_int:	
  1714                           
  1715                           	psect	text11
  1716  0302                     __ptext11:	
  1717 ;; *************** function i1_lcd_data *****************
  1718 ;; Defined at:
  1719 ;;		line 39 in file "/home/krish/MPLABXProjects/Quadcopter_Transmitter.X/lcd.h"
  1720 ;; Parameters:    Size  Location     Type
  1721 ;;  d               2    7[COMMON] int 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;		None
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         2       0       0       0       0
  1734 ;;      Locals:         0       0       0       0       0
  1735 ;;      Temps:          2       0       0       0       0
  1736 ;;      Totals:         4       0       0       0       0
  1737 ;;Total ram usage:        4 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; This function calls:
  1740 ;;		Nothing
  1741 ;; This function is called by:
  1742 ;;		_lcd_int
  1743 ;;		i1_lcd_string
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function i1_lcd_data
  1749  0302                     i1_lcd_data:	
  1750                           
  1751                           ;lcd.h: 41: PORTD = (d & 0xF0) | (0x04);
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in i1_lcd_data: [wreg+status,2+status,0]
  1755  0302  0877               	movf	i1lcd_data@d,w
  1756  0303  39F0               	andlw	240
  1757  0304  3804               	iorlw	4
  1758  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1759  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1760  0307  0088               	movwf	8	;volatile
  1761                           
  1762                           ;lcd.h: 42: PORTD |= 0x08;
  1763  0308  1588               	bsf	8,3	;volatile
  1764                           
  1765                           ;lcd.h: 43: _delay((unsigned long)((20)*(16000000/4000.0)));
  1766  0309  3068               	movlw	104
  1767  030A  00FA               	movwf	??i1_lcd_data+1
  1768  030B  30E4               	movlw	228
  1769  030C  00F9               	movwf	??i1_lcd_data
  1770  030D                     u77_27:	
  1771  030D  0BF9               	decfsz	??i1_lcd_data,f
  1772  030E  2B0D               	goto	u77_27
  1773  030F  0BFA               	decfsz	??i1_lcd_data+1,f
  1774  0310  2B0D               	goto	u77_27
  1775  0311  0000               	nop
  1776                           
  1777                           ;lcd.h: 44: PORTD &= 0xF7;
  1778  0312  30F7               	movlw	247
  1779  0313  00F9               	movwf	??i1_lcd_data
  1780  0314  0879               	movf	??i1_lcd_data,w
  1781  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1782  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1783  0317  0588               	andwf	8,f	;volatile
  1784                           
  1785                           ;lcd.h: 45: PORTD = (d << 4) | (0x04);
  1786  0318  0877               	movf	i1lcd_data@d,w
  1787  0319  00F9               	movwf	??i1_lcd_data
  1788  031A  3003               	movlw	3
  1789  031B                     u57_25:	
  1790  031B  1003               	clrc
  1791  031C  0DF9               	rlf	??i1_lcd_data,f
  1792  031D  3EFF               	addlw	-1
  1793  031E  1D03               	skipz
  1794  031F  2B1B               	goto	u57_25
  1795  0320  1003               	clrc
  1796  0321  0D79               	rlf	??i1_lcd_data,w
  1797  0322  3804               	iorlw	4
  1798  0323  0088               	movwf	8	;volatile
  1799                           
  1800                           ;lcd.h: 46: PORTD |= 0x08;
  1801  0324  1588               	bsf	8,3	;volatile
  1802                           
  1803                           ;lcd.h: 47: _delay((unsigned long)((20)*(16000000/4000.0)));
  1804  0325  3068               	movlw	104
  1805  0326  00FA               	movwf	??i1_lcd_data+1
  1806  0327  30E4               	movlw	228
  1807  0328  00F9               	movwf	??i1_lcd_data
  1808  0329                     u78_27:	
  1809  0329  0BF9               	decfsz	??i1_lcd_data,f
  1810  032A  2B29               	goto	u78_27
  1811  032B  0BFA               	decfsz	??i1_lcd_data+1,f
  1812  032C  2B29               	goto	u78_27
  1813  032D  0000               	nop
  1814                           
  1815                           ;lcd.h: 48: PORTD &= 0xF7;
  1816  032E  30F7               	movlw	247
  1817  032F  00F9               	movwf	??i1_lcd_data
  1818  0330  0879               	movf	??i1_lcd_data,w
  1819  0331  1283               	bcf	3,5	;RP0=0, select bank0
  1820  0332  1303               	bcf	3,6	;RP1=0, select bank0
  1821  0333  0588               	andwf	8,f	;volatile
  1822  0334  0008               	return
  1823  0335                     __end_ofi1_lcd_data:	
  1824                           
  1825                           	psect	text12
  1826  03BF                     __ptext12:	
  1827 ;; *************** function ___wmul *****************
  1828 ;; Defined at:
  1829 ;;		line 15 in file "/opt/microchip/xc8/v1.44/sources/common/Umul16.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  multiplier      2    0[COMMON] unsigned int 
  1832 ;;  multiplicand    2    2[COMMON] unsigned int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  product         2    4[COMMON] unsigned int 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  2    0[COMMON] unsigned int 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         4       0       0       0       0
  1845 ;;      Locals:         2       0       0       0       0
  1846 ;;      Temps:          0       0       0       0       0
  1847 ;;      Totals:         6       0       0       0       0
  1848 ;;Total ram usage:        6 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_lcd_int
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           
  1858                           ;psect for function ___wmul
  1859  03BF                     ___wmul:	
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1863  03BF  01F4               	clrf	___wmul@product
  1864  03C0  01F5               	clrf	___wmul@product+1
  1865  03C1                     i1l835:	
  1866  03C1  1C70               	btfss	___wmul@multiplier,0
  1867  03C2  2BC9               	goto	i1l165
  1868  03C3  0872               	movf	___wmul@multiplicand,w
  1869  03C4  07F4               	addwf	___wmul@product,f
  1870  03C5  1803               	skipnc
  1871  03C6  0AF5               	incf	___wmul@product+1,f
  1872  03C7  0873               	movf	___wmul@multiplicand+1,w
  1873  03C8  07F5               	addwf	___wmul@product+1,f
  1874  03C9                     i1l165:	
  1875  03C9  3001               	movlw	1
  1876  03CA                     u35_25:	
  1877  03CA  1003               	clrc
  1878  03CB  0DF2               	rlf	___wmul@multiplicand,f
  1879  03CC  0DF3               	rlf	___wmul@multiplicand+1,f
  1880  03CD  3EFF               	addlw	-1
  1881  03CE  1D03               	skipz
  1882  03CF  2BCA               	goto	u35_25
  1883  03D0  3001               	movlw	1
  1884  03D1                     u36_25:	
  1885  03D1  1003               	clrc
  1886  03D2  0CF1               	rrf	___wmul@multiplier+1,f
  1887  03D3  0CF0               	rrf	___wmul@multiplier,f
  1888  03D4  3EFF               	addlw	-1
  1889  03D5  1D03               	skipz
  1890  03D6  2BD1               	goto	u36_25
  1891  03D7  0870               	movf	___wmul@multiplier,w
  1892  03D8  0471               	iorwf	___wmul@multiplier+1,w
  1893  03D9  1D03               	btfss	3,2
  1894  03DA  2BC1               	goto	i1l835
  1895  03DB  0875               	movf	___wmul@product+1,w
  1896  03DC  00F1               	movwf	?___wmul+1
  1897  03DD  0874               	movf	___wmul@product,w
  1898  03DE  00F0               	movwf	?___wmul
  1899  03DF  0008               	return
  1900  03E0                     __end_of___wmul:	
  1901                           
  1902                           	psect	text13
  1903  01CC                     __ptext13:	
  1904 ;; *************** function ___awmod *****************
  1905 ;; Defined at:
  1906 ;;		line 6 in file "/opt/microchip/xc8/v1.44/sources/common/awmod.c"
  1907 ;; Parameters:    Size  Location     Type
  1908 ;;  divisor         2    0[COMMON] int 
  1909 ;;  dividend        2    2[COMMON] int 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  sign            1    6[COMMON] unsigned char 
  1912 ;;  counter         1    5[COMMON] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2    0[COMMON] int 
  1915 ;; Registers used:
  1916 ;;		wreg, status,2, status,0
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         4       0       0       0       0
  1923 ;;      Locals:         2       0       0       0       0
  1924 ;;      Temps:          1       0       0       0       0
  1925 ;;      Totals:         7       0       0       0       0
  1926 ;;Total ram usage:        7 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; This function calls:
  1929 ;;		Nothing
  1930 ;; This function is called by:
  1931 ;;		_lcd_int
  1932 ;; This function uses a non-reentrant model
  1933 ;;
  1934                           
  1935                           
  1936                           ;psect for function ___awmod
  1937  01CC                     ___awmod:	
  1938                           
  1939                           ;incstack = 0
  1940                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  1941  01CC  01F6               	clrf	___awmod@sign
  1942  01CD  1FF3               	btfss	___awmod@dividend+1,7
  1943  01CE  29D6               	goto	i1l899
  1944  01CF  09F2               	comf	___awmod@dividend,f
  1945  01D0  09F3               	comf	___awmod@dividend+1,f
  1946  01D1  0AF2               	incf	___awmod@dividend,f
  1947  01D2  1903               	skipnz
  1948  01D3  0AF3               	incf	___awmod@dividend+1,f
  1949  01D4  01F6               	clrf	___awmod@sign
  1950  01D5  0AF6               	incf	___awmod@sign,f
  1951  01D6                     i1l899:	
  1952  01D6  1FF1               	btfss	___awmod@divisor+1,7
  1953  01D7  29DD               	goto	i1l903
  1954  01D8  09F0               	comf	___awmod@divisor,f
  1955  01D9  09F1               	comf	___awmod@divisor+1,f
  1956  01DA  0AF0               	incf	___awmod@divisor,f
  1957  01DB  1903               	skipnz
  1958  01DC  0AF1               	incf	___awmod@divisor+1,f
  1959  01DD                     i1l903:	
  1960  01DD  0870               	movf	___awmod@divisor,w
  1961  01DE  0471               	iorwf	___awmod@divisor+1,w
  1962  01DF  1903               	btfsc	3,2
  1963  01E0  2A0A               	goto	i1l921
  1964  01E1  01F5               	clrf	___awmod@counter
  1965  01E2  0AF5               	incf	___awmod@counter,f
  1966  01E3                     i1l911:	
  1967  01E3  1BF1               	btfsc	___awmod@divisor+1,7
  1968  01E4  29F1               	goto	i1l913
  1969  01E5  3001               	movlw	1
  1970  01E6                     u51_25:	
  1971  01E6  1003               	clrc
  1972  01E7  0DF0               	rlf	___awmod@divisor,f
  1973  01E8  0DF1               	rlf	___awmod@divisor+1,f
  1974  01E9  3EFF               	addlw	-1
  1975  01EA  1D03               	skipz
  1976  01EB  29E6               	goto	u51_25
  1977  01EC  3001               	movlw	1
  1978  01ED  00F4               	movwf	??___awmod
  1979  01EE  0874               	movf	??___awmod,w
  1980  01EF  07F5               	addwf	___awmod@counter,f
  1981  01F0  29E3               	goto	i1l911
  1982  01F1                     i1l913:	
  1983  01F1  0871               	movf	___awmod@divisor+1,w
  1984  01F2  0273               	subwf	___awmod@dividend+1,w
  1985  01F3  1D03               	skipz
  1986  01F4  29F7               	goto	u53_25
  1987  01F5  0870               	movf	___awmod@divisor,w
  1988  01F6  0272               	subwf	___awmod@dividend,w
  1989  01F7                     u53_25:	
  1990  01F7  1C03               	skipc
  1991  01F8  29FF               	goto	i1l917
  1992  01F9  0870               	movf	___awmod@divisor,w
  1993  01FA  02F2               	subwf	___awmod@dividend,f
  1994  01FB  0871               	movf	___awmod@divisor+1,w
  1995  01FC  1C03               	skipc
  1996  01FD  03F3               	decf	___awmod@dividend+1,f
  1997  01FE  02F3               	subwf	___awmod@dividend+1,f
  1998  01FF                     i1l917:	
  1999  01FF  3001               	movlw	1
  2000  0200                     u54_25:	
  2001  0200  1003               	clrc
  2002  0201  0CF1               	rrf	___awmod@divisor+1,f
  2003  0202  0CF0               	rrf	___awmod@divisor,f
  2004  0203  3EFF               	addlw	-1
  2005  0204  1D03               	skipz
  2006  0205  2A00               	goto	u54_25
  2007  0206  3001               	movlw	1
  2008  0207  02F5               	subwf	___awmod@counter,f
  2009  0208  1D03               	btfss	3,2
  2010  0209  29F1               	goto	i1l913
  2011  020A                     i1l921:	
  2012  020A  0876               	movf	___awmod@sign,w
  2013  020B  1903               	btfsc	3,2
  2014  020C  2A12               	goto	i1l925
  2015  020D  09F2               	comf	___awmod@dividend,f
  2016  020E  09F3               	comf	___awmod@dividend+1,f
  2017  020F  0AF2               	incf	___awmod@dividend,f
  2018  0210  1903               	skipnz
  2019  0211  0AF3               	incf	___awmod@dividend+1,f
  2020  0212                     i1l925:	
  2021  0212  0873               	movf	___awmod@dividend+1,w
  2022  0213  00F1               	movwf	?___awmod+1
  2023  0214  0872               	movf	___awmod@dividend,w
  2024  0215  00F0               	movwf	?___awmod
  2025  0216  0008               	return
  2026  0217                     __end_of___awmod:	
  2027                           
  2028                           	psect	text14
  2029  0123                     __ptext14:	
  2030 ;; *************** function ___awdiv *****************
  2031 ;; Defined at:
  2032 ;;		line 6 in file "/opt/microchip/xc8/v1.44/sources/common/awdiv.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  divisor         2    0[COMMON] int 
  2035 ;;  dividend        2    2[COMMON] int 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  quotient        2    7[COMMON] int 
  2038 ;;  sign            1    6[COMMON] unsigned char 
  2039 ;;  counter         1    5[COMMON] unsigned char 
  2040 ;; Return value:  Size  Location     Type
  2041 ;;                  2    0[COMMON] int 
  2042 ;; Registers used:
  2043 ;;		wreg, status,2, status,0
  2044 ;; Tracked objects:
  2045 ;;		On entry : 0/0
  2046 ;;		On exit  : 0/0
  2047 ;;		Unchanged: 0/0
  2048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2049 ;;      Params:         4       0       0       0       0
  2050 ;;      Locals:         4       0       0       0       0
  2051 ;;      Temps:          1       0       0       0       0
  2052 ;;      Totals:         9       0       0       0       0
  2053 ;;Total ram usage:        9 bytes
  2054 ;; Hardware stack levels used:    1
  2055 ;; This function calls:
  2056 ;;		Nothing
  2057 ;; This function is called by:
  2058 ;;		_lcd_int
  2059 ;; This function uses a non-reentrant model
  2060 ;;
  2061                           
  2062                           
  2063                           ;psect for function ___awdiv
  2064  0123                     ___awdiv:	
  2065                           
  2066                           ;incstack = 0
  2067                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2068  0123  01F6               	clrf	___awdiv@sign
  2069  0124  1FF1               	btfss	___awdiv@divisor+1,7
  2070  0125  292D               	goto	i1l855
  2071  0126  09F0               	comf	___awdiv@divisor,f
  2072  0127  09F1               	comf	___awdiv@divisor+1,f
  2073  0128  0AF0               	incf	___awdiv@divisor,f
  2074  0129  1903               	skipnz
  2075  012A  0AF1               	incf	___awdiv@divisor+1,f
  2076  012B  01F6               	clrf	___awdiv@sign
  2077  012C  0AF6               	incf	___awdiv@sign,f
  2078  012D                     i1l855:	
  2079  012D  1FF3               	btfss	___awdiv@dividend+1,7
  2080  012E  2938               	goto	i1l861
  2081  012F  09F2               	comf	___awdiv@dividend,f
  2082  0130  09F3               	comf	___awdiv@dividend+1,f
  2083  0131  0AF2               	incf	___awdiv@dividend,f
  2084  0132  1903               	skipnz
  2085  0133  0AF3               	incf	___awdiv@dividend+1,f
  2086  0134  3001               	movlw	1
  2087  0135  00F4               	movwf	??___awdiv
  2088  0136  0874               	movf	??___awdiv,w
  2089  0137  06F6               	xorwf	___awdiv@sign,f
  2090  0138                     i1l861:	
  2091  0138  01F7               	clrf	___awdiv@quotient
  2092  0139  01F8               	clrf	___awdiv@quotient+1
  2093  013A  0870               	movf	___awdiv@divisor,w
  2094  013B  0471               	iorwf	___awdiv@divisor+1,w
  2095  013C  1903               	btfsc	3,2
  2096  013D  296F               	goto	i1l883
  2097  013E  01F5               	clrf	___awdiv@counter
  2098  013F  0AF5               	incf	___awdiv@counter,f
  2099  0140                     i1l871:	
  2100  0140  1BF1               	btfsc	___awdiv@divisor+1,7
  2101  0141  294E               	goto	i1l873
  2102  0142  3001               	movlw	1
  2103  0143                     u41_25:	
  2104  0143  1003               	clrc
  2105  0144  0DF0               	rlf	___awdiv@divisor,f
  2106  0145  0DF1               	rlf	___awdiv@divisor+1,f
  2107  0146  3EFF               	addlw	-1
  2108  0147  1D03               	skipz
  2109  0148  2943               	goto	u41_25
  2110  0149  3001               	movlw	1
  2111  014A  00F4               	movwf	??___awdiv
  2112  014B  0874               	movf	??___awdiv,w
  2113  014C  07F5               	addwf	___awdiv@counter,f
  2114  014D  2940               	goto	i1l871
  2115  014E                     i1l873:	
  2116  014E  3001               	movlw	1
  2117  014F                     u43_25:	
  2118  014F  1003               	clrc
  2119  0150  0DF7               	rlf	___awdiv@quotient,f
  2120  0151  0DF8               	rlf	___awdiv@quotient+1,f
  2121  0152  3EFF               	addlw	-1
  2122  0153  1D03               	skipz
  2123  0154  294F               	goto	u43_25
  2124  0155  0871               	movf	___awdiv@divisor+1,w
  2125  0156  0273               	subwf	___awdiv@dividend+1,w
  2126  0157  1D03               	skipz
  2127  0158  295B               	goto	u44_25
  2128  0159  0870               	movf	___awdiv@divisor,w
  2129  015A  0272               	subwf	___awdiv@dividend,w
  2130  015B                     u44_25:	
  2131  015B  1C03               	skipc
  2132  015C  2964               	goto	i1l879
  2133  015D  0870               	movf	___awdiv@divisor,w
  2134  015E  02F2               	subwf	___awdiv@dividend,f
  2135  015F  0871               	movf	___awdiv@divisor+1,w
  2136  0160  1C03               	skipc
  2137  0161  03F3               	decf	___awdiv@dividend+1,f
  2138  0162  02F3               	subwf	___awdiv@dividend+1,f
  2139  0163  1477               	bsf	___awdiv@quotient,0
  2140  0164                     i1l879:	
  2141  0164  3001               	movlw	1
  2142  0165                     u45_25:	
  2143  0165  1003               	clrc
  2144  0166  0CF1               	rrf	___awdiv@divisor+1,f
  2145  0167  0CF0               	rrf	___awdiv@divisor,f
  2146  0168  3EFF               	addlw	-1
  2147  0169  1D03               	skipz
  2148  016A  2965               	goto	u45_25
  2149  016B  3001               	movlw	1
  2150  016C  02F5               	subwf	___awdiv@counter,f
  2151  016D  1D03               	btfss	3,2
  2152  016E  294E               	goto	i1l873
  2153  016F                     i1l883:	
  2154  016F  0876               	movf	___awdiv@sign,w
  2155  0170  1903               	btfsc	3,2
  2156  0171  2977               	goto	i1l887
  2157  0172  09F7               	comf	___awdiv@quotient,f
  2158  0173  09F8               	comf	___awdiv@quotient+1,f
  2159  0174  0AF7               	incf	___awdiv@quotient,f
  2160  0175  1903               	skipnz
  2161  0176  0AF8               	incf	___awdiv@quotient+1,f
  2162  0177                     i1l887:	
  2163  0177  0878               	movf	___awdiv@quotient+1,w
  2164  0178  00F1               	movwf	?___awdiv+1
  2165  0179  0877               	movf	___awdiv@quotient,w
  2166  017A  00F0               	movwf	?___awdiv
  2167  017B  0008               	return
  2168  017C                     __end_of___awdiv:	
  2169  007E                     btemp	set	126	;btemp
  2170  007E                     wtemp0	set	126


Data Sizes:
    Strings     22
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     25      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@s	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ext_int in COMMON

    _disp_PID->_lcd_int
    _disp_PID->i1_lcd_string
    i1_lcd_string->i1_lcd_data
    _lcd_int->i1_lcd_data
    i1_lcd_data->___awmod

Critical Paths under _main in BANK0

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _ext_int in BANK0

    _disp_PID->_lcd_int

Critical Paths under _main in BANK1

    None.

Critical Paths under _ext_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ext_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ext_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1530
                                             22 BANK0      3     3      0
                            _lcd_cmd
                           _lcd_init
                         _lcd_string
                           _pic_init
 ---------------------------------------------------------------------------------
 (1) _pic_init                                             1     1      0       0
                                             13 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           5     5      0     322
                                             17 BANK0      5     5      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             4     2      2     124
                                             13 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     604
                                             17 BANK0      3     3      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              4     2      2     604
                                             13 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ext_int                                              9     9      0    2090
                                              4 BANK0      9     9      0
                           _disp_PID
 ---------------------------------------------------------------------------------
 (4) _disp_PID                                             0     0      0    2066
                            _lcd_int
                          i1_lcd_cmd
                       i1_lcd_string
 ---------------------------------------------------------------------------------
 (5) i1_lcd_string                                         5     5      0     186
                                             11 COMMON     2     2      0
                                              0 BANK0      3     3      0
                         i1_lcd_data
 ---------------------------------------------------------------------------------
 (5) i1_lcd_cmd                                            4     2      2     226
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (5) _lcd_int                                              6     4      2    1654
                                             11 COMMON     2     0      2
                                              0 BANK0      4     4      0
                            ___awdiv
                            ___awmod
                             ___wmul
                         i1_lcd_data
 ---------------------------------------------------------------------------------
 (6) i1_lcd_data                                           4     2      2      96
                                              7 COMMON     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     198
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4     508
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_data
   _pic_init

 _ext_int (ROOT)
   _disp_PID
     _lcd_int
       ___awdiv
       ___awmod
       ___wmul
       i1_lcd_data
         ___awmod (ARG)
     i1_lcd_cmd
     i1_lcd_string
       i1_lcd_data
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      21       5       41.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Apr 14 20:30:35 2018

                      _D 0039                        _I 003B                        _P 003D  
                      pc 0002             ___awdiv@sign 0076                       fsr 0004  
    ___wmul@multiplicand 0072                      u707 028C                      u717 0184  
                    u727 02A4                      u737 02C2                      u585 02B2  
                    u595 027C                      u677 02E6                      u687 02FD  
                    u697 026E                      fsr0 0004             ___awmod@sign 0076  
             i1_lcd_data 0302                     l1103 02F7                     l1033 036C  
                   STR_1 03F9                     STR_2 03F6                     STR_3 03F3  
                   STR_4 03E6                     _INTE 005C                     _INTF 0059  
                   i1l63 024E                     i1l64 0254                     i1l73 00A7  
                   _main 02CE                     btemp 007E                     start 0012  
            lcd_string@i 0033              lcd_string@s 0035               i1lcd_cmd@c 0070  
                  ?_main 0070          __end_of___awdiv 017C          __end_of___awmod 0217  
        ___awdiv@divisor 0070                    i1l165 03C9                    i1l911 01E3  
                  i1l903 01DD                    i1l913 01F1                    i1l921 020A  
                  i1l835 03C1                    i1l861 0138                    i1l925 0212  
                  i1l917 01FF                    i1l871 0140                    i1l855 012D  
                  i1l873 014E                    i1l883 016F                    i1l981 00AC  
                  i1l887 0177                    i1l879 0164                    i1l983 00EE  
                  i1l899 01D6          ___awdiv@counter 0075                    u41_25 0143  
                  _PORTD 0008                    u43_25 014F                    u51_25 01E6  
                  u35_25 03CA    __size_ofi1_lcd_string 002C                    u44_25 015B  
                  u36_25 03D1                    u45_25 0165                    u53_25 01F7  
                  u54_25 0200                    u62_25 034D                    _TRISB 0086  
                  u57_25 031B                    _TRISD 0088                    u66_25 0235  
                  u74_27 023F                    u75_27 033F                    u76_27 035B  
                  u77_27 030D                    u78_27 0329          __end_of_lcd_cmd 02CE  
        __end_of_lcd_int 0123          __end_of_ext_int 0261                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
     __size_ofi1_lcd_cmd 0032              i1lcd_data@d 0077             __end_of_main 0302  
           i1_lcd_string 0393                   ??_main 0036              ?i1_lcd_data 0077  
       ___awdiv@dividend 0072                   i1l1011 0398                   i1l1125 0099  
                 i1l1061 0068                   i1l1053 0046                   i1l1045 0024  
                 i1l1073 0092                   i1l1091 022C                   i1l1069 008A  
                 _INTCON 000B         __end_of_disp_PID 00A8         __end_of_lcd_data 0298  
       __end_of_lcd_init 01CC                   ___wmul 03BF                ??___awdiv 0074  
              ??___awmod 0074         ___awdiv@quotient 0077          ___awmod@divisor 0070  
       __end_of_pic_init 0410          ___awmod@counter 0075                ??_lcd_cmd 002F  
              ??_lcd_int 0020                ??_ext_int 0024                   saved_w 007E  
      __end_ofi1_lcd_cmd 0367  __end_of__initialization 001F           __pcstackCOMMON 0070  
    __size_ofi1_lcd_data 0033               __pbssBANK0 0039               __pmaintext 02CE  
                ?___wmul 0070               __pintentry 0004                ?_disp_PID 0070  
              ?_lcd_data 002D               _lcd_string 0367                ?_lcd_init 0070  
             __stringtab 03E0                ?_pic_init 0070                  ___awdiv 0123  
                ___awmod 01CC          __size_of___wmul 0021                  __ptext1 03FC  
                __ptext2 0367                  __ptext3 0261                  __ptext4 017C  
                __ptext5 0298                  __ptext6 0217                  __ptext7 0023  
                __ptext8 0393                  __ptext9 0335                  _lcd_cmd 0298  
                _lcd_int 00A8                  _page_no 003F                  _ext_int 0217  
       ___awmod@dividend 0072             ??i1_lcd_data 0079               ??_disp_PID 007D  
             ??_lcd_data 002F               ??_lcd_init 0031     end_of_initialization 001F  
             ??_pic_init 002D       __end_ofi1_lcd_data 0335              ?_lcd_string 0070  
              i1_lcd_cmd 0335           __end_of___wmul 03E0      start_initialization 0015  
             ?i1_lcd_cmd 0070            i1lcd_string@i 0021            i1lcd_string@s 0020  
               ??___wmul 0074      __size_of_lcd_string 002C                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_disp_PID 0085        __size_of_lcd_data 0037  
      __size_of_lcd_init 0050        __size_of_pic_init 0014                 ?___awdiv 0070  
          ?i1_lcd_string 0070                 ?___awmod 0070                __pstrings 03E0  
               ?_lcd_cmd 002D                 ?_lcd_int 007B                 ?_ext_int 0070  
            ??i1_lcd_cmd 0072        interrupt_function 0004           ___wmul@product 0074  
         ??i1_lcd_string 007B                lcd_data@d 002D              __stringbase 03E5  
      ___wmul@multiplier 0070             ??_lcd_string 0031         __size_of___awdiv 0059  
       __size_of___awmod 004B       __end_of_lcd_string 0393       __end_of__stringtab 03E6  
       __size_of_lcd_cmd 0036         __size_of_lcd_int 007B         __size_of_ext_int 004A  
               __ptext10 00A8                 __ptext11 0302                 __ptext12 03BF  
               __ptext13 01CC                 __ptext14 0123                 _disp_PID 0023  
               _lcd_data 0261                 _lcd_init 017C            __size_of_main 0034  
               _pic_init 03FC                 lcd_cmd@c 002D                 lcd_int@i 007B  
               lcd_int@j 0022     __end_ofi1_lcd_string 03BF                 ext_int@j 002B  
               intlevel1 0000                stringcode 03E0               _OPTION_REG 0081  
               stringdir 03E0                 stringtab 03E0  
